name: $(SourceBranchName)-$(Date:yyyyMMdd).$(Rev:r)

trigger:
  batch: true
  branches:
    include: [ "master", "develop" ]
  paths:
    exclude: [ "README.md", "LICENSE", ".github/*", "examples/*", ".golangci.yml", ".gitlab-ci.yml", ".idea/*", "doc/*" ]

pr:
  autoCancel: true
  branches:
    include: [ "master", "develop" ]
  paths:
    exclude: [ "README.md", "LICENSE", ".github/*", "examples/*", ".golangci.yml", ".gitlab-ci.yml", ".idea/*", "doc/*" ]

jobs:
  - job: binary
    displayName: "binary build"
    pool:
      vmImage: "ubuntu-latest"
    workspace:
      clean: all
    timeoutInMinutes: 240

    strategy:
      matrix:
        consoleserver-nanopir2s-rootfs:
          ARMBIAN_CONFIG_FILE: consoleserver-nanopir2s-rootfs
        consoleserver-nanopir2s-sdcard:
          ARMBIAN_CONFIG_FILE: consoleserver-nanopir2s-sdcard

    steps:
      - checkout: self
        clean: true
        lfs: true
        submodules: recursive
        fetchDepth: 2

      - bash: |
          pushd armbian-build
          rm -f userpatches || true
          ln -s ../userpatches userpatches

          ./compile.sh "$ARMBIAN_CONFIG_FILE"

          popd
        displayName: 'Build'

      - bash: |
          cp -afv -- armbian-build/output/* "${BUILD_ARTIFACTSTAGINGDIRECTORY}"
        displayName: 'Copy Artifacts'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifacts'
        inputs:
          ArtifactName: 'images'
